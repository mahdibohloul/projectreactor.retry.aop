name: Java CI with Gradle

on:
  push:
    branches:
      - master
      - '*.x'  # Maintenance branches like 1.x, 2.x
    tags:
      - 'v*.*.*'
      - 'v*.*.*-RC*'  # Release candidates
      - 'v*.*.*-M*'   # Milestones
  pull_request:
    branches: [ "master", "*.x" ]

permissions:
  contents: write  # Needed for creating releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.9.0

      - name: Check Code Style
        run: ./gradlew spotlessCheck

      - name: Build and Test
        run: ./gradlew clean build test

  publish:
    needs: build
    if: |
      github.event_name == 'push' && 
      (startsWith(github.ref, 'refs/tags/v') || 
       contains(github.ref, '-RC') || 
       contains(github.ref, '-M'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Generate Release Notes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "## What's Changed" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          if git tag | grep .; then
            git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"* %s" >> RELEASE_NOTES.md
          else
            echo "* Initial release" >> RELEASE_NOTES.md
          fi

      - name: Publish to Maven Central (Central SonarType)
        run: ./gradlew publishToMavenCentral
        env:
          # GPG Signing credentials
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_NOTES.md
          prerelease: ${{ contains(github.ref, '-RC') || contains(github.ref, '-M') }}
