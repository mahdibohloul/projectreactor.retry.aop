plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version "6.9.0"
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.mahdibohloul'
version = '1.3.0'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

dependencies {
    implementation('org.springframework:spring-context:5.3.22') {
        exclude(group: 'org.springframework.boot', module: 'spring-boot-starter-logging')
    }
    implementation('org.springframework:spring-core:5.3.22') {
        exclude(group: 'org.springframework.boot', module: 'spring-boot-starter-logging')
    }
    implementation 'io.projectreactor:reactor-core:3.4.22'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.aspectj:aspectjweaver:1.9.9.1'
    testImplementation 'org.mockito:mockito-core:4.7.0'
    testImplementation 'io.projectreactor:reactor-test:3.4.22'
}

tasks.withType(Sign.class) {
    onlyIf {
        !version.toString().endsWith('-SNAPSHOT')
    }
}

//signing {
//    sign(publishing.publications)
//}
//
//publishing {
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
//            credentials {
//                username = project.property("ossrhUsername").toString()
//                password = project.property("ossrhPassword").toString()
//            }
//        }
//    }
//
//    publications {
//        maven(MavenPublication) {
//            groupId = project.group.toString()
//            artifactId = project.name.toString()
//            version = project.version.toString()
//            pom {
//                description.set("ProjectReactor Retry AOP provides convenient retry support for your reactive applications.")
//                name.set(artifactId)
//                url.set("https://github.com/mahdibohloul/projectreactor.retry.aop")
//                licenses {
//                    license {
//                        name.set("MIT License")
//                        url.set("https://opensource.org/licenses/MIT")
//                        distribution.set("repo")
//                    }
//                }
//                developers {
//                    developer {
//                        id.set("mahdibohloul")
//                        name.set("Mahdi Bohloul")
//                        email.set("mahdiibohloul@gmail.com")
//                    }
//                }
//                scm {
//                    url.set("https://github.com/mahdibohloul/projectreactor.retry.aop")
//                }
//            }
//            from(components["java"])
//        }
//    }
//}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        eclipse()
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
}
